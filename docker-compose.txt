version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: tasktracker-postgres
    restart: always
    environment:
      POSTGRES_DB: tasktracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Flask Backend API
  flask-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tasktracker-api
    restart: always
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=postgres
      - DB_NAME=tasktracker
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy

  # React Frontend
  react-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tasktracker-frontend
    restart: always
    ports:
      - "3000:80"
    volumes:
      - ./frontend/build:/usr/share/nginx/html
    depends_on:
      - flask-api

volumes:
  postgres_data:
